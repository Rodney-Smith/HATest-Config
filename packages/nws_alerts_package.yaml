###############################################################################
#  @author         :  Rodney Smith
#  @date           :  06/22/2022
#  @homeassistant  :  NWS
#  @description    :  This is the package for NWS ALERTS USING THE CUSTOM 
#                     COMPONENT
#                               https://www.home-assistant.io/integrations/nws/
#                     For testing the API
#                                   https://api.weather.gov/alerts/active/count
#                        https://api.weather.gov/alerts/active?zone=<some_zone>
###############################################################################

########################  SENSOR  ###############################################

sensor:
  - platform: template
    sensors:
      nws_audio_src:
        unique_id: c7e4decf-42ff-4156-b97f-bc55017ab4a9
        value_template: !secret nws_audio_source

######################## BINARY SENSOR  #########################################

binary_sensor:
  - platform: template
    sensors:
      nws_alerts_are_active:
        unique_id: f16ce897-c961-4a79-bc7d-706a940c08eb
        friendly_name: NWS Alerts Are Active
        value_template: >
          {{ states('sensor.nws_alerts') | int(0) > 0 }}
        icon_template: >-
          {% if states('sensor.nws_alerts') | int(0) > 0 %}
            mdi:weather-lightning
          {% else %}
            mdi:weather-sunny
          {% endif %}

######################## INPUT BOOLEAN  #########################################

input_boolean:
  nws_multi_alert:
    name: NWS Multiple Alerts At Once

############################## VARIABLE  #####################################

## this uses the hass_variable custom component.
## you can install thru HACS or manually from https://github.com/Wibias/hass-variables

variable:
  nws_alerts_event_ids:
    value: 'none'
    restore: true

########################  AUTOMATION  ###########################################

automation:
  - id: 21b18cc6-6ba4-4573-85a0-7fd3c735078f
    alias: 'NWS Check for Multi Alerts'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts
    condition:
      - "{{ states('sensor.nws_alerts') | int > 0 }}"
      - '{{ trigger.to_state.state|int > trigger.from_state.state|int }}'
    action:
      - choose:
          - conditions:
              - '{{ (trigger.to_state.state | int - trigger.from_state.state|int) > 1 }}'
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.nws_multi_alert
              - delay:
                  seconds: 30
              - service: input_boolean.turn_on
                entity_id: input_boolean.nws_multi_alert
          - conditions:
            - '{{ (trigger.to_state.state | int - trigger.from_state.state|int) == 1 }}'
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.nws_multi_alert

  - id: 9dd81426-3600-4fbd-81e4-962c004303a5
    alias: 'NWS Weather Alert Pop Up Control'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts
    condition:
      - "{{ states('sensor.nws_alerts') | int > 0 }}"
      - '{{ trigger.to_state.state|int > trigger.from_state.state|int }}'
      - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[0] not in states.variable.nws_alerts_event_ids.attributes.values()|list) and (state_attr('sensor.nws_alerts', 'event_id').split('-')[0] != states('variable.nws_alerts_event_ids')) }}"
    action:
      - delay:
          seconds: 5
      - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.nws_multi_alert
              state: 'on'
            - '{{ (trigger.to_state.state | int - trigger.from_state.state|int) == 2 }}'
            - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[1] not in states.variable.nws_alerts_event_ids.attributes.values()|list) and (state_attr('sensor.nws_alerts', 'event_id').split('-')[1] != states('variable.nws_alerts_event_ids')) }}"
          sequence:
            - service: script.nws_popup_on_wx_alert
              data:
                title: >
                  "{{ state_attr('sensor.nws_alerts', 'title').split(' - ')[0] }}"
                message: >
                  "{{ state_attr('sensor.nws_alerts', 'display_desc').split('\n\n-\n\n')[0] }}"
            - service: script.nws_popup_on_wx_alert
              data:
                title: >
                  "{{ state_attr('sensor.nws_alerts', 'title').split(' - ')[1] }}"
                message: >
                  "{{ state_attr('sensor.nws_alerts', 'display_desc').split('\n\n-\n\n')[1] }}"
        - conditions:
            - condition: state
              entity_id: input_boolean.nws_multi_alert
              state: 'on'
            - '{{ (trigger.to_state.state | int - trigger.from_state.state|int) == 3 }}'
            - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[1] not in states.variable.nws_alerts_event_ids.attributes.values()|list) and (state_attr('sensor.nws_alerts', 'event_id').split('-')[1] != states('variable.nws_alerts_event_ids')) }}"
            - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[2] not in states.variable.nws_alerts_event_ids.attributes.values()|list) and (state_attr('sensor.nws_alerts', 'event_id').split('-')[2] != states('variable.nws_alerts_event_ids')) }}"
          sequence:
            - service: script.nws_popup_on_wx_alert
              data:
                title: >
                  "{{ state_attr('sensor.nws_alerts', 'title').split(' - ')[0] }}"
                message: >
                  "{{ state_attr('sensor.nws_alerts', 'display_desc').split('\n\n-\n\n')[0] }}"
            - service: script.nws_popup_on_wx_alert
              data:
                title: >
                  "{{ state_attr('sensor.nws_alerts', 'title').split(' - ')[1] }}"
                message: >
                  "{{ state_attr('sensor.nws_alerts', 'display_desc').split('\n\n-\n\n')[1] }}"
            - service: script.nws_popup_on_wx_alert
              data:
                title: >
                  "{{ state_attr('sensor.nws_alerts', 'title').split(' - ')[2] }}"
                message: >
                  "{{ state_attr('sensor.nws_alerts', 'display_desc').split('\n\n-\n\n')[2] }}"
        default:
          service: script.nws_popup_on_wx_alert
          data:
            title: >
              "{{ state_attr('sensor.nws_alerts', 'title').split(' - ')[0] }}"
            message: >
              "{{ state_attr('sensor.nws_alerts', 'display_desc').split('\n\n-\n\n')[0] }}"

  - id: 1ff5ef86-db21-4a9c-a67b-e49e614c0d99
    alias: NWS Announce Weather Alert
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts
    condition:
      condition: and
      conditions:
        - "{{states('sensor.nws_alerts') | int > 0}}"
        - '{{ trigger.to_state.state|int > trigger.from_state.state|int }}'
        - "{{ ('Severe Thunderstorm Warning' in state_attr('sensor.nws_alerts', 'title')) or ('Tornado Warning' in state_attr('sensor.nws_alerts', 'title')) or ('Earthquake Warning' in state_attr('sensor.nws_alerts', 'title')) }}"
        - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[0] not in states.variable.nws_alerts_event_ids.attributes.values()|list) }}"
        - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[0] != states('variable.nws_alerts_event_ids')) }}"
    action:
      - service: media_player.volume_set
        data:
          entity_id:
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          volume_level: 0.9
      - service: notify.alexa_media
        data:
          target: 
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          data:
            type: tts
          message: >
            {% if 'Severe Thunderstorm Warning' in state_attr('sensor.nws_alerts', 'title') %}
              Attention!,,,The National Weather Service has issued a severe thunderstorm warning for our area
            {% elif 'Tornado Warning' in state_attr('sensor.nws_alerts', 'title') %}
              Attention!,,,The National Weather Service has issued a tornado warning for our area
            {% elif 'Earthquake Warning' in state_attr('sensor.nws_alerts', 'title') %}
              Attention!,,,The National Weather Service has issued a earthquake warning for our area
            {% else %}
              This is a test of the National Weather Service Alert!
            {% endif %}
      - delay: '00:00:15'
      - service: notify.alexa_media
        data:
          message: "{{ states('sensor.nws_audio_src') }}"
          target: 
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          data:
            type: tts
      - delay: '00:00:25'
      - service: notify.alexa_media
        data:
          target: 
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          data:
            type: tts
          message: >
            {% if 'Severe Thunderstorm Warning' in state_attr('sensor.nws_alerts', 'title') %}
              Attention!,,,The National Weather Service has issued a severe thunderstorm warning for our area
            {% elif 'Tornado Warning' in state_attr('sensor.nws_alerts', 'title') %}
              Attention!,,,The National Weather Service has issued a tornado warning for our area
            {% elif 'Earthquake Warning' in state_attr('sensor.nws_alerts', 'title') %}
              Attention!,,,The National Weather Service has issued a earthquake warning for our area
            {% else %}
              This is a test of the National Weather Service Alert!
            {% endif %}

  - id: 1711b581-5d8d-4768-aa19-11b0aad77897
    alias: NWS Announce Weather Alert for MBR
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts
    condition:
      condition: and
      conditions:
        - "{{states('sensor.nws_alerts') | int > 0}}"
        - "{{ 'Tornado Warning' in state_attr('sensor.nws_alerts', 'title') }}"
        - "{{ 'TEST' not in state_attr('sensor.nws_alerts', 'title') }}"
        - "{{ 'Test' not in state_attr('sensor.nws_alerts', 'status') }}"
        - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[0] not in states.variable.nws_alerts_event_ids.attributes.values()|list) }}"
        - "{{ (state_attr('sensor.nws_alerts', 'event_id').split('-')[0] != states('variable.nws_alerts_event_ids')) }}"
    action:
      - service: media_player.volume_set
        data:
          entity_id:
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          volume_level: 0.9
      - service: notify.alexa_media
        data:
          target: 
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          data:
            type: tts
          message: "Attention!,,,The National Weather Service has issued a Tornado Warning for our area."
      - delay: '00:00:15'
      - service: notify.alexa_media
        data:
          message: "{{ states('sensor.nws_audio_src') }}"
          target: 
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          data:
            type: tts
      - delay: '00:00:25'
      - service: notify.alexa_media
        data:
          target: 
            - media_player.bedroom_echo_dot
            - media_player.guest1_echo_dot
            - media_player.guest2_echo_dot
            - media_player.hall_echo_flex
            - media_player.kitchen_echo_flex
            - media_player.lr_echo_show5
            - media_player.office_echo_show
          data:
            type: tts
          message: "Attention!,,,The National Weather Service has issued a Tornado Warning for our area."

  - id: c75e293d-4de9-450b-b80d-f2a0d838e7b8
    alias: NWS Update Event ID Variable
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.nws_alerts
    action:
      - service: variable.set_variable
        data:
          variable: nws_alerts_event_ids
          attributes: 
            history_1: "{{ states('variable.nws_alerts_event_ids') }}"
            history_2: "{{ state_attr('variable.nws_alerts_event_ids', 'history_1') }}"
            history_3: "{{ state_attr('variable.nws_alerts_event_ids', 'history_2') }}"
            history_4: "{{ state_attr('variable.nws_alerts_event_ids', 'history_3') }}"
            history_5: "{{ state_attr('variable.nws_alerts_event_ids', 'history_4') }}"
            history_6: "{{ state_attr('variable.nws_alerts_event_ids', 'history_5') }}"
            history_7: "{{ state_attr('variable.nws_alerts_event_ids', 'history_6') }}"
            history_8: "{{ state_attr('variable.nws_alerts_event_ids', 'history_7') }}"
            history_9: "{{ state_attr('variable.nws_alerts_event_ids', 'history_8') }}"
            history_10: "{{ state_attr('variable.nws_alerts_event_ids', 'history_9') }}"
      - service: variable.set_variable
        data:
          variable: nws_alerts_event_ids
          value: "{{ (trigger.to_state.attributes.event_id).split('-')[0] }}"

###############################  SCRIPT  ###################################

script:
  nws_popup_on_wx_alert:
    alias: NWS Weather Alert Pop Up
    sequence:
      - service: >
          {% if states('sensor.nws_alerts') != '0' %}
            persistent_notification.create
          {% endif %}
        data_template:
          notification_id: "nwswxalert"
          message: "{{ message }}"
          title: '{{ title }}'
